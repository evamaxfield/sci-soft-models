name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Check linting, formating, types, etc.
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
  
    - uses: extractions/setup-just@v1

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install pre-commit
      
    - name: Lint
      run: just lint

  # Run tests
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
  
    - uses: extractions/setup-just@v1

    - name: Install Dependencies
      run: |
        pip install uv
        uv pip install --system .[test]
      
    - name: Run Tests
      run: just test

  # Publish s-dist
  deploy-sdist:
    needs: [lint, test]
    if: success() && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build
        run: |
          python -m pip install build
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  # Publish wheels
  deploy-wheel:
    needs: deploy-sdist
    if: startsWith(github.event.ref, 'refs/tags/v')
    name: mypyc wheels (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux-x86_64
          - os: windows-latest
            name: windows-amd64
          - os: macos-13
            name: macos-x86_64
            macos_arch: "x86_64"
          - os: macos-14
            name: macos-arm64
            macos_arch: "arm64"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build wheels via cibuildwheel
        uses: pypa/cibuildwheel@v2.21.0
        with:
          output-dir: dist
        env:
          CIBW_ARCHS_MACOS: "${{ matrix.macos_arch }}"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1